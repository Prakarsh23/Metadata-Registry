generator:
  class:              sfPropelAdminGenerator
  param:
    model_class:      ExportHistory
    theme:            default

    fields:
      id:             { name: ID, type: plain}
      created_at:     { name: Date Created, type: plain, params: date_format='s', help: This is the date the export was created }
      user:           { name: Member, type: plain, help: The individual that created the export }
      csv_type:
        name: CSV Type
        type: select_tag
        params:
          select_options:
            2: Populated import template
            1: Empty import template
            3: Sparse data (just the populated attribute columns
            4: Rich data (includes empty attribute columns
        help: The type of CSV file to export }
      exclude_deprecated:   { name: Exclude Deprecated, type: checkbox_tag, help: This will exclude from the export currently deprecated elements }
      exclude_generated:    { name: Exclude Generated, type: checkbox_tag, help: This will exclude from the export inferred elements materialized by the Registry }
      include_deleted:
        name: Include Deleted
        type: checkbox_tag
        help: |
          This will include most of the previously deleted element properties in the export.
          This isn't a complete 'undo' feature. It simply puts properties that have been deleted back in the exported data.
          It's primary utility is to recover properties that were deleted by misteak in the last import.
          THIS HAS NO EFFECT ON RDF EXPORT!! Deleted properties are never included in the RDF
      selected_language:
        name: Additional Language
        type: admin_select_language
        params:
          limitmethod: getLanguagesNoDefault
        help: |
          The default language is English
          Additional language column included for populating each literal attribute

      selected_columns:
        name: Selected Columns
        type: select_tag
        params:
          peer_method: getProfileColumns
          related_class: ExportHistory
      published_english_version:  { name: English Version, type: plain, help: The published English version on which this export is based }
      published_language_version:  { name: Language Version, type: plain, help: The published version of the selected language on which this export is based }
      last_vocab_update:  { name: Last Update, type: plain, params: date_format='s', help: The date of the last update of this vocabulary }

    list:
      title:          Export History
      fields:
        created_at:   { params: date_format='F' }
      display:        [created_at, user, schema, selected_language, published_english_version, published_language_version]
      sort:           [created_at, desc]
      displayfilter:  false
      filters:        [schema_id, created_at, user, vocabulary_id]
      # urlfilter form is [field to filter on]: [value passed from routing.yml]
      # multiple filters can be set but they're currently mutually exclusive (any of the list can be used but only one per url)
      urlfilters:
        schema_id:                  schema_id
        vocabulary_id:              vocabulary_id
      object_actions:
        _show:
      actions:
        _create:      { name: Create New Export, query_string: { schema_id: schema_id} }

    edit:
      title:
        mode:
          edit:       Editing
          create:     Create a new CSV export
      helptype:       icon
      fields:
        id:           { credentials: [administrator], mode: edit }
        selected_language:
          condition:  "$sf_flash->get('hasLanguages')"
          limitmethod: getLanguagesNoDefault
          params:     include_blank=true

      display:
        "Export Detail":     [id, csv_type, exclude_deprecated, exclude_generated, selected_language, include_deleted, selected_columns ]
      hide:           [schema_id, user_id, vocabulary_id]

      actions:
        _list:         { query_string: { schema_id: schema_id} }
        _save:         { name: Export CSV }
        _cancel:       { query_string: { schema_id: schema_id} }

    show:
      title:           Show Export detail for %%resource%%
      fields:
        id:            { credentials: [administrator] }
#        map:           { helper: auto_link_uri }
#        results:       { helper: auto_link_text }
        created_at:    { params: date_format='F' }
        _elapsed:      { name: Elapsed }
      display:
        "Import Detail":      [created_at, user, source_file_name]
        "Results":            [totalProcessedCount, success_count, error_count, _elapsed]
#        "Map":                [map]
        "Import Log":         [_results]
      actions:
        _list:         { query_string: { schema_id: schema_id} }
