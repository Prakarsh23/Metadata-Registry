generator:
  class:              sfPropelAdminGenerator
  param:
    model_class:      SchemaHasUser
    theme:            default
    fields:
      id:                { name: ID, type: plain, credentials: [administrator] }
      created_at:        { name: Date Created, type: plain, credentials: [administrator] }
      updated_at:        { name: Last Updated, type: plain, credentials: [administrator] }
      is_admin_for:      { name: Administrator }
      is_registrar_for:  { name: Registrar }
      is_maintainer_for: { name: Maintainer }
      languages:         { name: Editable Languages }
      default_language:  { name: Default Language }

    list:
      #peer_method:       doSelectJoinAll
      #peer_count_method: doCountForUser
      title:              Maintainers for %%schema%%
      fields:
        user:             {name: Member, helper: link_to_object, condition: "!$sf_request->getParameter('user_id')" }
        schema:           {name: Schema, helper: link_to_object, condition: "!$sf_request->getParameter('schema_id') " }
      display:            [ user, schema, isRegistrarFor, isAdminFor, isMaintainerFor, _languages, _defaultLanguage]
      object_actions:
        _show:
        _edit:            { query_string: {sf_request: schema_id}, route: schemauser_edit, credentials: [[administrator, schemaadmin, schemamaintainer, agentadmin]] }
        _delete:          { credentials: [[administrator, schemaadmin, agentadmin]] }
      actions:
        _create:          {query_string: {schema_id: schema_id}, name: Add Maintainer, credentials: [[administrator, schemaadmin, agentadmin]] }
      displayfilter:      false
      filters:            [schema_id, user_id]
      urlfilters:
        schema_id:        schema_id
        user_id:          user_id

    edit:
      title:
        mode:
          edit:       Editing “%%schema%%” permissions for %%user%%
          create:     Adding maintainer to “%%schema%%”
      helptype:       icon
      fields:
        user_id:       { params: peer_method=getNewUsersForSchema include_blank=false, mode: create }
        user:          { type: plain, mode: edit }
        is_registrar_for:  { credentials: [[administrator]], mode: edit}
        languages:         { type: admin_select_language, params: multiple=true limitmethod=getLanguagesForSchema style="width:99%" include_custom=[*, All languages ], credentials: [[administrator, schemaadmin, agentadmin]] }
        default_language:  { type: admin_select_language, params: limitmethod=getLanguagesForSchema style="width:99%", credentials: [[administrator, schemaadmin, agentadmin, schemamaintainer]] }
      display:             [user, user_id, isRegistrarFor, isAdminFor, isMaintainerFor, languages, default_language]
      actions:
        _save:         { credentials: [[administrator, schemaadmin, agentadmin, schemamaintainer]] }
        _delete:       { credentials: [[administrator, schemaadmin, agentadmin]] }
        _save_and_add: { credentials: [[administrator, schemaadmin, agentadmin]] }
        _cancel:       { credentials: [[administrator, schemaadmin, agentadmin, schemamaintainer]] }

    show:
      title:           %%schema%% permissions for %%user%%
      fields:
        user:          { type: plain }
      display:         [user, isRegistrarFor, isAdminFor, isMaintainerFor, _languages, _defaultLanguage]
      actions:
        _delete:       { credentials: [[administrator, schemaadmin, agentadmin]] }
        _edit:         { credentials: [[administrator, schemaadmin, agentadmin, schemamaintainer]] }
        _create:       { name: Add Maintainer, credentials: [[administrator, schemaadmin, agentadmin]] }
