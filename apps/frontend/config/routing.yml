#api
api_get:
  url:   /api/get/*.
  param: { module: api, action: get }

api_all:
  url:   /api/:objects/:action/*.
  param: { module: api}

# uri schema
uri_schema_html:
  url:  /uri/schema/:schema.html
  param: { module: api, action: get, class: schema, type: html, redir: true }

uri_schema_rdf:
  url:  /uri/schema/:schema.rdf
  param: { module: api, action: get, class: schema, type: rdf }

uri_schema_default:
  url:  /uri/schema/:schema.
  param: { module: api, action: get, class: schema, type: unknown, redir: true }

# uri schema property
uri_schemaprop_html:
  url:  /uri/schema/:schema/:property.html
  param: { module: api, action: get, class: schemaproperty, type: html, redir: true }

uri_schemaprop_rdf:
  url:  /uri/schema/:schema/:property.rdf
  param: { module: api, action: get, class: schemaproperty, type: rdf }

uri_schemaprop_default:
  url:  /uri/schema/:schema/:property.
  param: { module: api, action: get, class: schemaproperty, type: unknown, redir: true }

# uri concept scheme
uri_concept_html:
  url:  /uri/:scheme/:concept.html
  param: { module: rdf, action: showConcept, type: html }

uri_scheme_html:
  url:  /uri/:scheme.html
  param: { module: rdf, action: showScheme, type: html }

#uri concept
uri_concept_timeslice:
  url:  /uri/:scheme/:concept/ts/:ts.rdf
  param: { module: rdf, action: showConcept, type: uri }

uri_concept:
  url:  /uri/:scheme/:concept.rdf
  param: { module: rdf, action: showConcept, type: uri }

#uri_scheme
uri_scheme_timeslice:
  url:  /uri/:scheme/ts/:ts.rdf
  param: { module: rdf, action: showScheme, type: uri }

uri_scheme_version:
  url:  /uri/:scheme/version/:version.rdf
  param: { module: rdf, action: showScheme, type: uri }

uri_scheme:
  url:  /uri/:scheme.rdf
  param: { module: rdf, action: showScheme, type: uri }

uri_scheme_xml_schema_timeslice:
  url:  /uri/:scheme/ts/:ts.xsd
  param: { module: xml, action: showScheme, type: uri }

uri_scheme_xml_schema_version:
  url:  /uri/:scheme/version/:version.xsd
  param: { module: xml, action: showScheme, type: uri }

uri_scheme_xml_schema:
  url:  /uri/:scheme.xsd
  param: { module: xml, action: showScheme, type: uri }

uri_concept_unknown:
  url:  /uri/:scheme/:concept.
  param: { module: rdf, action: showConcept, type: unknown }

uri_scheme_unknown:
  url:  /uri/:scheme.
  param: { module: rdf, action: showScheme, type: unknown }

rdf_concept_timeslice:
  url:  /concept/show/id/:id/ts/:ts.rdf
  param: { module: rdf, action: showConcept, type: rdf }

rdf_schema_prop:
  url:  /schemaprop/show/id/:id.rdf
  param: { module: schemaprop, action: showRdf}

rdf_concept:
  url:  /concept/show/id/:id.rdf
  param: { module: rdf, action: showConcept, type: rdf }

rdf_vocabulary_timeslice:
  url:  /vocabulary/show/id/:id/ts/:ts.rdf
  param: { module: rdf, action: showScheme, type: rdf }

rdf_vocabulary_version:
  url:  /vocabulary/show/id/:id/version/:version.rdf
  param: { module: rdf, action: showScheme, type: rdf }

rdf_schema:
  url:  /schema/show/id/:id.rdf
  param: { module: schema, action: showRdf}

rdf_vocabulary:
  url:  /vocabulary/show/id/:id.rdf
  param: { module: rdf, action: showScheme, type: rdf }

xml_schema_vocabulary_timeslice:
  url:  /vocabulary/show/id/:id/ts/:ts.xsd
  param: { module: xml, action: showScheme, type: xmlschema }

xml_schema_vocabulary_version:
  url:  /vocabulary/show/id/:id/version/:version.xsd
  param: { module: xml, action: showScheme, type: xmlschema }

xml_schema_vocabulary:
  url:  /vocabulary/show/id/:id.xsd
  param: { module: xml, action: showScheme, type: xmlschema }


#discuss
discuss_list:
  url:   /discuss/list/:IdType/:id.html
  param: { module: discuss, action: list}

#file import
file_import:
  url:   /file/import/:IdType/:id.html
  param: { module: file, action: import}


# concepts
concept_search:
  url:   /conceptprop/search.
#  param: { module: search, action: index }
  param: { module: conceptprop, action: search }

# concept history
concept_history_list:
  url:   /history/list/:IdType/:id.html
  param: { module: history, action: list}

concept_history_feed_atom:
  url:   /history/feed/:IdType/:id.atom
  param: { module: history, action: feed, format: atom1}

concept_history_feed_rdf:
  url:   /history/feed/:IdType/:id.rdf
  param: { module: history, action: feed, format: rss10}

concept_history_feed_rss:
  url:   /history/feed/:IdType/:id.rss
  param: { module: history, action: feed, format: rss201}

concept_history_feed_all_atom:
  url:   /history/feed.atom
  param: { module: history, action: feed, format: atom1}

concept_history_feed_all_rdf:
  url:   /history/feed.rdf
  param: { module: history, action: feed, format: rss10}

concept_history_feed_all_rss:
  url:   /history/feed.rss
  param: { module: history, action: feed, format: rss201}


#schemas (element sets)

schema_search:
  url:   /schemaprop/search.
  param: { module: schemaprop, action: search }

schemaprop_language:
  url:   /schemaprop/language.
  param: { module: schemaprop, action: language }
schema_history_list:
  url:   /schemahistory/list/:IdType/:id.html
  param: { module: schemahistory, action: list}

schema_history_feed_atom:
  url:   /schemahistory/feed/:IdType/:id.atom
  param: { module: schemahistory, action: feed, format: atom1}

schema_history_feed_rdf:
  url:   /schemahistory/feed/:IdType/:id.rdf
  param: { module: schemahistory, action: feed, format: rss10}

schema_history_feed_rss:
  url:   /schemahistory/feed/:IdType/:id.rss
  param: { module: schemahistory, action: feed, format: rss201}

schema_history_feed_all_atom:
  url:   /schemahistory/feed.atom
  param: { module: schemahistory, action: feed, format: atom1}

schema_history_feed_all_rdf:
  url:   /schemahistory/feed.rdf
  param: { module: schemahistory, action: feed, format: rss10}

schema_history_feed_all_rss:
  url:   /schemahistory/feed.rss
  param: { module: schemahistory, action: feed, format: rss201}


all_history_feed_atom:
  url:   /allhistoryfeeds.atom
  param: { module: content, action: allHistoryFeeds, format: atom1}



# user
user_show:
  url:   /user/show/id:/id
  param: { module: user, action: show }

user_list:
  url:   /user/list
  param: { module: user, action: list }

user_save:
  url:   /user/save
  param: { module: user, action: save }

user_profile:
  url:   /user/:nickname
  param: { module: user, action: showSubscriber }

user_update:
  url:   /update_user
  param: { module: user, action: update }

current_user_profile:
  url:   /user
  param: { module: user, action: showSubscriber }

add_account:
  url:   /add_user
  param: { module: user, action: add }

user_require_password:
  url:   /password_request
  param: { module: user, action: passwordRequest }

# login
login:
  url:   /login
  param: { module: user, action: login }

logout:
  url:   /logout
  param: { module: user, action: logout }

# content
about:
  url:   /about
  param: { module: content, action: about }

# default rules
homepage:
  url:   /
  param: { module: content, action: home }

default_symfony:
  url:   /symfony/:action/*
  param: { module: default }

default_index:
  url:   /:module
  param: { action: index }

default:
  url:   /:module/:action/*