generator:
  class:              sfPropelAdminGenerator
  param:
    model_class:      SchemaProperty
    theme:            default
    pager:
      no_results:     No Elements have been defined for this Element Set

    fields:
      id:
         name:        ID
         type:        plain
      created_at:
        name:         Date Created
        help:         This is the date the Property was created
        type:         plain
      updated_at:
        name:         Last Updated
        help:         This is the date the Property was last updated
        type:         plain
      created_user:
        name:         Created by
        help:         This is the user who created this Property
        type:         plain
      updated_user:
        name:         Last Updated by
        help:         This is the user who updated the Property last
        type:         plain
      uri:               { name: Canonical URI, help: "This is the 'standard' URI for this element. It will be the same regardless of language." }
      name:              { name: Name, help: "This is a machine-compatible label for this property and is required for every Property" }
      label:             { name: Label, help: "This is a human-friendly label for this property and is required for every Property" }
      definition:        { name: Description, help: "A description of this property" }
      is_depricated:     { name: Deprecated, help: "This Element has been deprecated" }
      is_subproperty_of: { name: Subproperty of, help: "Choose a registered property from the list. This will override the existing subproperty URI (if any) when the form is saved." }
      is_subclass_of:    { name: Subclass of, help: "Choose a registered class from the list. This will override the existing subclass URI (if any) when the form is saved." }
      parent_uri:        { name: Parent URI, help: "The URI of the parent class or property."}
      status_id:         { name: Status, help: "This is the overall status of this Element. Individual properties of this element may have a different status" }
      properties:        { name: Statements }
      orange:            { name: Range }

    list:
      title:            Properties for %%schema%%
      fields:
        uri:            { helper: truncate_uri, help: "A link to the URI. The display may have been truncated." }
        updated_at:     { name: Updated, params: date_format='g' }
      display:          [=label, type, uri, status, updated_at, updated_user]
      displayfilter:    false
      object_actions:
        _edit:          { credentials: [[administrator, schemamaintainer, schemaadmin]] }
      actions:
        _create:        { name: Add Element, credentials: [[administrator, schemamaintainer, schemaadmin]] }
      filters:          [schema_id, label, updated_at, status]
      urlfilters:
        schema_id:  schema_id

    edit:
      title:
        mode:
          edit:        Editing %%label%%
          create:      Creating new property
      fields:
        id:            { credentials: [administrator], mode: edit }
        label:         { type: input_tag, params: onblur=updateUri() }
        mytype:        { type: plain, name: Type, mode: edit }
        lexical_alias: { name: Lexical Alias, help: "This is a language-specific 'readable' URI for this element." }
        type:
          mode: create
          type: select_tag
          params:
            select_options:
              property:    property
              class:       class
            include_blank: false
            onchange: swapOptions()
        language:          { type: admin_select_language, params: limitmethod=getLanguagesForUser }
        is_subproperty_of: { type: select_tag, params: related_class=SchemaProperty array_method=getPropertiesforCurrentUser include_blank=true onchange=showHideParent() style="width:99%"}
        is_subclass_of:    { type: select_tag, params: related_class=SchemaProperty array_method=getClassesForCurrentUser include_blank=true onchange=showHideParent() style="width:99%"}
      title:               Detail for %%label%%
      hide:                [schema_id, schema_uri]
      display:
        "-Metadata":   { fields: [id, created_at, created_user, updated_at, updated_user], mode: edit}
        "Detail":      [mytype, type, uri, language, label, name, lexical_alias, definition, comment, is_subproperty_of, is_subclass_of, parent_uri, domain, orange, status_id, note]
#        "Statements":  [_listproperties]
      actions:
        _list:         { query_string: { schema_id: schema_id} }
        _save:         { credentials: [[administrator, schemamaintainer, schemaadmin, schemapropadmin]] }
        _delete:       { credentials: [[administrator, schemaadmin]] }
        _create:       { name: Add Element, credentials: [[administrator, schemamaintainer, schemaadmin, schemapropadmin]], mode: edit  }
        _save_and_add: { credentials: [[administrator, schemamaintainer, schemaadmin, schemapropadmin]] }
        _cancel:       { credentials: [[administrator, schemamaintainer, schemaadmin, schemapropadmin]], query_string: { schema_id: schema_id} }

    show:
      peer_method:   doSelectJoinAll
      fields:
        id:            { credentials: [administrator] }
        uri:           { helper: auto_link_uri }
        show_parent:   { name: Parent, condition: "$schema_property->getParentUri()" }
        parent_uri:    { name: Parent URI, condition: "$schema_property->getParentUri()" }
        domain:        { condition: "'property' == $schema_property->getType()" }
        orange:        { condition: "''property' == $schema_property->getType()" }
        show_lexical_alias:  { name: Lexical Alias, help: "This is a language-specific 'readable' URI for this element." }
      display:
        "-Metadata":   { fields: [id, created_at, created_user, updated_at, updated_user] }
        "Detail":      [_uri, label, name, _show_lexical_alias, definition, comment, type, _show_parent, parent_uri, domain, orange, status, _language, note]
#        "Statements":  [_listproperties]
      actions:
        _list:         { query_string: { schema_id: schema_id} }
        _edit:         { credentials: [[administrator, schemamaintainer, schemaadmin]] }
        _create:       { name: Add Element, credentials: [[administrator, schemamaintainer, schemaadmin]] }
        rdf:
          name:      Get RDF
          icon:      %SF_ADMIN_WEB_DIR%/images/rdf_icon.png
          route:     rdf_schema_prop
